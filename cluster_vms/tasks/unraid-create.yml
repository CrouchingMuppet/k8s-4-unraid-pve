- name: Create VMs
  block:
    - name: Create VM disk path
      ansible.builtin.file:
        path: "{{ vm_files_path }}/init"
        state: directory
        mode: "0755"
    - name: Create VM disk and attach cloud-init ISO
      ansible.builtin.command:
        cmd: >
          qemu-img create -f qcow2 -F qcow2
            -b {{ persistence_folder }}/vm.qcow2
            {{ vm_files_path }}/vm.qcow2
            60G
        creates: "{{ vm_files_path }}/vm.qcow2"
    - name: Create meta-data
      ansible.builtin.template:
        src: meta-data.j2
        dest: "{{ vm_files_path }}/init/meta-data"
        mode: "0644"
    - name: Create user-data
      ansible.builtin.template:
        src: user-data.j2
        dest: "{{ vm_files_path }}/init/user-data"
        mode: "0644"
    - name: Create cloud-init ISO
      ansible.builtin.command:
        cmd: >
          mkisofs -o {{ vm_files_path }}/cloudinit.iso
          -V cidata
          -r -J
          {{ vm_files_path }}/init/user-data {{ vm_files_path }}/init/meta-data
      args:
        creates: "{{ vm_files_path }}/cloudinit.iso"
    - name: Create VM template
      ansible.builtin.template:
        src: kvm.xml.j2
        dest: "{{ vm_files_path }}/kvm.xml"
        mode: "0644"
    - name: Create VM NVRAM
      ansible.builtin.copy:
        src: /usr/share/qemu/ovmf-x64/OVMF_VARS-pure-efi.fd
        dest: "{{ vm_files_path }}/OVMF_VARS-pure-efi.fd"
        remote_src: true
        mode: "0644"
    - name: Create VM
      ansible.builtin.command:
        cmd: virsh define {{ vm_files_path }}/kvm.xml
        creates: /etc/libvirt/qemu/{{ vm_name }}.xml
    - name: Start VM
      ansible.builtin.command:
        cmd: virsh start {{ vm_name }}
      register: output
      changed_when: '"started" in output.stdout'
      failed_when: >
        ("started" not in output.stdout) and
        ("already active" not in output.stderr)
