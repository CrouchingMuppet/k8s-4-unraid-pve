---
- name: Configure cluster
  vars:
    # enable distributed etcd if we are a HA cluster
    extra_args: "{% if controlplane_ips | count > 2 %} --cluster-init {% endif %}"
  block:
    - name: Install prerequisites
      vars:
        # iscsi-initiator-utils and nfs-utils are optional, used for longhorn storage
        packages:
          - iscsi-initiator-utils
          - nfs-utils
      ansible.builtin.dnf:
        name: "{{ packages }}"
        state: present
        update_cache: true
      become: true
      delegate_to: "cloud-user@{{ item }}"
      loop: "{{ controlplane_ips + worker_ips }}"
    - name: Install k3s on first control plane node
      ansible.builtin.shell:
        cmd: |
          curl -sfL https://get.k3s.io | \
            INSTALL_K3S_EXEC="server{{ extra_args }}--tls-san 192.168.1.99" \
            sh -s -
        creates: /usr/local/bin/k3s
      delegate_to: "cloud-user@{{ controlplane_ips[0] }}"
    - name: Get k3s node token
      ansible.builtin.shell:
        cmd: cat /var/lib/rancher/k3s/server/node-token
      become: true
      register: k3s_token
      delegate_to: "cloud-user@{{ controlplane_ips[0] }}"
      changed_when: false
    - name: Download kube config
      ansible.builtin.fetch:
        src: /etc/rancher/k3s/k3s.yaml
        dest: "{{ kube_config_dest }}"
        flat: yes
      become: true
      delegate_to: "cloud-user@{{ controlplane_ips[0] }}"
    - name: Patch kube config
      ansible.builtin.replace:
        path: "{{ kube_config_dest }}"
        regexp: "server: https://127.0.0.1"
        replace: "server: https://{{ loadbalancer_ip }}"
      delegate_to: localhost
    - name: Join other control plane nodes
      ansible.builtin.shell:
        cmd: |
          curl -sfL https://get.k3s.io | \
            sh -s - \
            --tls-san {{ loadbalancer_ip }} \
            --server https://{{ loadbalancer_ip }}:6443 \
            --token {{ k3s_token.stdout }}
        creates: /usr/local/bin/k3s
      delegate_to: "cloud-user@{{ item }}"
      loop: "{{ controlplane_ips[1:] }}"
    - name: Join worker nodes
      ansible.builtin.shell:
        cmd: |
          curl -sfL https://get.k3s.io | \
            sh -s - agent \
            --server https://{{ loadbalancer_ip }}:6443 \
            --token {{ k3s_token.stdout }}
        creates: /usr/local/bin/k3s
      delegate_to: "cloud-user@{{ item }}"
      loop: "{{ worker_ips }}"
  rescue:
    - name: Uninstall k3s from all nodes
      ansible.builtin.shell:
        cmd: /usr/local/bin/k3s-uninstall.sh
        removes: /usr/local/bin/k3s
      ignore_errors: true
      delegate_to: "cloud-user@{{ item }}"
      loop: "{{ controlplane_ips + worker_ips }}"
